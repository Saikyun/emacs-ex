("~/.emacs.d/" "~/programmering/clojure-script/miracle-save/" "~/" "~/programmering/clojure/irc-bot/" "~/programmering/clojure-script/prepl-client/" "~/programmering/clojure-script/shadow-bootstrap-example/" "~/spel/animal-capital/" "~/.emacs.d/scripts/acrepl/" "~/programmering/clojure-script/shadow-cljs-starter/" "~/programmering/clojure/miracle.save/" "~/programmering/clojure/prepl-dummy/" "~/jobb/forms-and-photos/" "~/programmering/clojure-script/cave/" "~/spel/ueoueo/" "~/spel/second-deck-builder/" "~/spel/downloaded_assets/" "~/spel/blender/" "~/spel/test-ghostwheel/" "~/spel/test-instrument/" "~/spel/animal-capital/ghostwheel/" "~/jobb/reagent-expo/" "~/jag/" "~/spel/material-rn/" "~/unity/Deck and Hand/" "~/spel/reagent-expo/" "~/.clojure/" "~/.emacs.d/scripts/preppy/" "~/.emacs.d/scripts/miracle/" "~/spel/quickstart/" "~/spel/spelsylt3/" "~/programmering/spelsylt/" "~/programmering/clojure/magic-slack-bot/" "~/spel/animal-capital-deck-server/" "~/spel/three-bmfont-text/" "~/programmering/clojure-script/shadow-cljs/" "~/spel/javascript-to-clojurescript/" "~/unity/Get Started With Arcadia/" "~/.config/karabiner/" "~/spel/deck-builder/" "~/spel/test-expo/" "~/spel/test-three/" "~/.emacs.d/scripts/monroe/" "~/programmering/clojure/lua-compiler/" "~/programmering/clojure/logic-playground/" "~/programmering/clojure/logic-tutorial/" "~/unity/clojure-clr/bin/4.0/Release/clr.core.logic/" "~/programmering/clojure/Logic-Starter/" "~/unity/clojure-clr/" "~/programmering/clojure-clr/magic/" "~/unity/punk/" "~/programmering/clojure-script/blog-projects/self-hosted-cljs/" "~/programmering/clojure-script/blog-projects/other-blog-projects/" "~/programmering/clojure-script/clojurescript/" "~/programmering/clojure-script/blog-projects/" "~/programmering/clojure-script/test-compile/" "~/programmering/clojure/wat/" "~/programmering/clojure/type-test/" "~/programmering/clojure/lul/" "~/unity/Poison Girl 4/" "~/unity/Poison Girl 4/Assets/Arcadia/" "~/programmering/memset-snip/" "~/programmering/clojure/spec-gen/" "~/programmering/clojure/adorn/" "~/unity/arcadia-network-example/Assets/Arcadia/" "~/unity/arcadia-network-example/" "~/unity/Deck and Hand/Assets/Arcadia/" "~/programmering/old-memset-snip/" "~/programmering/" "~/programmering/clojure/clojure-lsp/" "~/programmering/clojure-script/hello-world.app/")